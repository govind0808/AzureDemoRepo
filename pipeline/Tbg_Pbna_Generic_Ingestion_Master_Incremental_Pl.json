{
	"name": "Tbg_Pbna_Generic_Ingestion_Master_Incremental_Pl",
	"properties": {
		"activities": [
			{
				"name": "Get_Landing_And_Raw_Details",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Set_Start_Date",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlDWSource",
						"sqlReaderQuery": {
							"value": "@concat('select distinct RawFolderPath,LoadFrequency,RawFileLandingPath, replace(RawFilePattern,''Sales*'','''') as RawFilePattern from  ', pipeline().parameters.Config_Schema_Name,'.',pipeline().parameters.Config_Table_Name,'  ','  Where LoadType = ''Incremental'' and Sourcetype = ''',pipeline().parameters.Sourcetype,''' and RawFilePattern like ''%Sales%''')",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "AzureSynapseAnalytics_Table2",
						"type": "DatasetReference",
						"parameters": {
							"SchemaName": {
								"value": "@pipeline().parameters.Config_Schema_Name",
								"type": "Expression"
							},
							"TableName": {
								"value": "@pipeline().parameters.Config_Table_Name",
								"type": "Expression"
							}
						}
					}
				}
			},
			{
				"name": "Copy_Files_From_Landing_to_Raw",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Sales_File_Availability_Check",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Filtering_Files').output.Value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Copy_Landing_To_Raw",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": true,
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "DS_Pbna_Landing_raw1",
									"type": "DatasetReference",
									"parameters": {
										"container": {
											"value": "@pipeline().globalParameters.LandingContainer",
											"type": "Expression"
										},
										"directory": {
											"value": "@activity('Get_Landing_And_Raw_Details').output.firstRow.RawFileLandingPath",
											"type": "Expression"
										},
										"filename": "@item().name"
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DS_Pbna_Copy_raw",
									"type": "DatasetReference",
									"parameters": {
										"container": {
											"value": "@pipeline().globalParameters.SourceContainer",
											"type": "Expression"
										},
										"directory": {
											"value": "@activity('Get_Landing_And_Raw_Details').output.firstRow.RawFolderPath",
											"type": "Expression"
										},
										"filename": "@item().name"
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "Tbg_Pbna_Raw_Stage_Publish_Pl",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Copy_Files_From_Landing_to_Raw",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "Tbg_Pbna_Ingestion_Raw_Stage_Publish_Incremental_Pl",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"Config_Schema_Name": {
							"value": "@pipeline().parameters.Config_Schema_Name",
							"type": "Expression"
						},
						"Config_Table_Name": {
							"value": "@pipeline().parameters.Config_Table_Name",
							"type": "Expression"
						},
						"Sourcetype": {
							"value": "@pipeline().parameters.Sourcetype",
							"type": "Expression"
						},
						"Master_Pipelinename": {
							"value": "@pipeline().parameters.Master_Pipeline_Name",
							"type": "Expression"
						},
						"Master_Pipelineid": {
							"value": "@pipeline().parameters.Master_Pipeline_Id",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Get_Files_Exist_Status_Of_Landing",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "Update_Run_Status_And_Start_Date",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "DS_Pbna_Landing1",
						"type": "DatasetReference",
						"parameters": {
							"container": {
								"value": "@pipeline().globalParameters.LandingContainer",
								"type": "Expression"
							},
							"directory": {
								"value": "@activity('Get_Landing_And_Raw_Details').output.firstRow.RawFileLandingPath",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"exists"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "If_Files_Exists_Then_Get_Details",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Get_Files_Exist_Status_Of_Landing",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@activity('Get_Files_Exist_Status_Of_Landing').output.exists",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Fail_No_Source_File_copy1",
							"type": "Fail",
							"dependsOn": [
								{
									"activity": "Failure_Mail_For_No_Source_Files_copy1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"message": "Source files are not available to process",
								"errorCode": "101"
							}
						},
						{
							"name": "Failure_Mail_For_No_Source_Files_copy1",
							"description": "",
							"type": "WebActivity",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"method": "POST",
								"headers": {
									"Content-Type": "application/json"
								},
								"url": {
									"value": "https://eus1logicapp-entdata-dev.azurewebsites.net:443/api/generic_pl_failure_email/triggers/manual/invoke?api-version=2022-05-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=knRDzfBBoJauBIUg29y5CzHJFA8iiX3kDznUYCz2QwU",
									"type": "Expression"
								},
								"body": {
									"value": "{\n    \"Environment\":\"@{pipeline().globalParameters.Environment}\",\n\t\"DataFactoryName\":\"@{pipeline().Pipeline}\",\n\t\"ErrorMessage\":\"Source files are not available to process\",\n\t\"RunId\":\"@{pipeline().RunId}\",\n\t\"pipelineName\":\"@{pipeline().Pipeline}\",\n\t\"SourceType\":\"@{pipeline().parameters.Sourcetype}\",\n    \"FileName\":\"@{pipeline().parameters.Sourcetype}\"\n}\n",
									"type": "Expression"
								}
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Filter_Customer",
							"type": "Filter",
							"dependsOn": [
								{
									"activity": "Filtering_Files",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"items": {
									"value": "@activity('Filtering_Files').output.value",
									"type": "Expression"
								},
								"condition": {
									"value": "@contains(item().name,'Customer')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Filter_Product",
							"type": "Filter",
							"dependsOn": [
								{
									"activity": "Filtering_Files",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"items": {
									"value": "@activity('Filtering_Files').output.value",
									"type": "Expression"
								},
								"condition": {
									"value": "@contains(item().name,'Product')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Filter_Location",
							"type": "Filter",
							"dependsOn": [
								{
									"activity": "Filtering_Files",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"items": {
									"value": "@activity('Filtering_Files').output.value",
									"type": "Expression"
								},
								"condition": {
									"value": "@contains(item().name,'Location')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Filter_Sales",
							"type": "Filter",
							"dependsOn": [
								{
									"activity": "Filtering_Files",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"items": {
									"value": "@activity('Filtering_Files').output.value",
									"type": "Expression"
								},
								"condition": {
									"value": "@contains(item().name,'Sales')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Filtering_Files",
							"type": "Filter",
							"dependsOn": [
								{
									"activity": "Get_Metadata_Of_Landing",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"items": {
									"value": "@activity('Get_Metadata_Of_Landing').output.childItems",
									"type": "Expression"
								},
								"condition": {
									"value": "@equals(item().type,'File')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Get_Metadata_Of_Landing",
							"type": "GetMetadata",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "DS_Pbna_Landing_raw1",
									"type": "DatasetReference",
									"parameters": {
										"container": {
											"value": "@pipeline().globalParameters.LandingContainer",
											"type": "Expression"
										},
										"directory": {
											"value": "@activity('Get_Landing_And_Raw_Details').output.firstRow.RawFileLandingPath",
											"type": "Expression"
										},
										"filename": {
											"value": "@concat(activity('Get_Landing_And_Raw_Details').output.firstRow.RawFilePattern,activity('Get_Landing_And_Raw_Details').output.firstRow.LoadFrequency,'*')",
											"type": "Expression"
										}
									}
								},
								"fieldList": [
									"childItems",
									"itemType"
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							}
						}
					]
				}
			},
			{
				"name": "Delete_Landing_Files",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Tbg_Pbna_Raw_Stage_Publish_Pl",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Filtering_Files').output.Value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Delete_Landing_File",
							"type": "Delete",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "DS_Pbna_Landing_raw1",
									"type": "DatasetReference",
									"parameters": {
										"container": {
											"value": "@pipeline().globalParameters.LandingContainer",
											"type": "Expression"
										},
										"directory": {
											"value": "@activity('Get_Landing_And_Raw_Details').output.firstRow.RawFileLandingPath",
											"type": "Expression"
										},
										"filename": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								},
								"enableLogging": false,
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							}
						}
					]
				}
			},
			{
				"name": "Failure_Email",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Delete_Landing_Files",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"method": "POST",
					"headers": {
						"Content-Type": "application/json"
					},
					"url": "https://eus1logicapp-entdata-dev.azurewebsites.net:443/api/generic_pl_failure_email/triggers/manual/invoke?api-version=2022-05-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=knRDzfBBoJauBIUg29y5CzHJFA8iiX3kDznUYCz2QwU",
					"body": {
						"value": "{\n    \"DataFactoryName\":\"@{pipeline().Pipeline}\",\n\t\"ErrorMessage\":\"Error Excecuting Pipeline\",\n\t\"RunId\":\"@{pipeline().RunId}\",\n\t\"pipelineName\":\"@{pipeline().Pipeline}\",\n\t\"SourceType\":\"@{pipeline().parameters.Sourcetype}\",\n\t\"Environment\":\"@{pipeline().globalParameters.Environment}\",\n    \"FileName\":\"PBNA File\"\n}\n\n\n",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Success_Email",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Update_Run_Status_And_End_Date",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"method": "POST",
					"headers": {
						"Content-Type": "application/json"
					},
					"url": "https://eus1logicapp-entdata-dev.azurewebsites.net:443/api/generic_pl_success_email/triggers/manual/invoke?api-version=2022-05-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=8JDN-ED9ifSaHJ2b_zQq1VP2Q_Rrm2HYD6qgWb7JcLU",
					"body": {
						"value": "{\n    \"Environment\":\"@{pipeline().globalParameters.Environment}\",\n    \"SourceType\":\"@{pipeline().parameters.Sourcetype}\"\n}\n\n",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Sales_File_Availability_Check",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "If_Files_Exists_Then_Get_Details",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@and(\n    and(\n        and(\n        equals(activity('Filter_Sales').output.FilteredItemsCount, 1 )\n        ,lessOrEquals(activity('Filter_Product').output.FilteredItemsCount, 1 )\n    )\n    , lessOrEquals(activity('Filter_Customer').output.FilteredItemsCount, 1 ))\n    , lessOrEquals(activity('Filter_Location').output.FilteredItemsCount, 1 ))",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Fail_No_Source_File",
							"type": "Fail",
							"dependsOn": [
								{
									"activity": "Failure_Mail_For_No_Source_Files",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"message": "Source files are not available to process",
								"errorCode": "101"
							}
						},
						{
							"name": "Failure_Mail_For_No_Source_Files",
							"description": "",
							"type": "WebActivity",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"method": "POST",
								"headers": {
									"Content-Type": "application/json"
								},
								"url": {
									"value": "https://eus1logicapp-entdata-dev.azurewebsites.net:443/api/generic_pl_failure_email/triggers/manual/invoke?api-version=2022-05-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=knRDzfBBoJauBIUg29y5CzHJFA8iiX3kDznUYCz2QwU",
									"type": "Expression"
								},
								"body": {
									"value": "{\n    \"Environment\":\"@{pipeline().globalParameters.Environment}\",\n\t\"DataFactoryName\":\"@{pipeline().Pipeline}\",\n\t\"ErrorMessage\":\"Source files are not available to process\",\n\t\"RunId\":\"@{pipeline().RunId}\",\n\t\"pipelineName\":\"@{pipeline().Pipeline}\",\n\t\"SourceType\":\"@{pipeline().parameters.Sourcetype}\",\n    \"FileName\":\"@{pipeline().parameters.Sourcetype}\"\n}\n",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "Set_Start_Date",
				"description": "",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "Start_Date",
					"value": {
						"value": "@formatDateTime(utcNow(),'yyyy-MM-dd HH:mm:ss.mmm')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Get_Id_For_All_Source_Entries",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Get_Landing_And_Raw_Details",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlDWSource",
						"sqlReaderQuery": {
							"value": "@concat('select distinct id, sourceType from  ', pipeline().parameters.Config_Schema_Name,'.',pipeline().parameters.Config_Table_Name,'  ','  Where LoadType = ''Incremental'' and Sourcetype = ''',pipeline().parameters.Sourcetype,'''')",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "AzureSynapseAnalytics_Table2",
						"type": "DatasetReference",
						"parameters": {
							"SchemaName": {
								"value": "@pipeline().parameters.Config_Schema_Name",
								"type": "Expression"
							},
							"TableName": {
								"value": "@pipeline().parameters.Config_Table_Name",
								"type": "Expression"
							}
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Update_Run_Status_And_Start_Date",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get_Id_For_All_Source_Entries",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get_Id_For_All_Source_Entries').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Sp_Upd_Run_Status_As_Running",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[sp_upd_run_status]",
								"storedProcedureParameters": {
									"sourcetype": {
										"value": {
											"value": "@item().SourceType",
											"type": "Expression"
										},
										"type": "String"
									},
									"id": {
										"value": {
											"value": "@item().id",
											"type": "Expression"
										},
										"type": "Int16"
									},
									"run_status": {
										"value": {
											"value": "Running",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_AzureSynapseAnalytics_PROD",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Sp_Udp_Start_Date",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Sp_Upd_Run_Status_As_Running",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[sp_upd_start_end_date]",
								"storedProcedureParameters": {
									"sourcetype": {
										"value": {
											"value": "@item().SourceType",
											"type": "Expression"
										},
										"type": "String"
									},
									"start_date": {
										"value": {
											"value": "@variables('Start_date')",
											"type": "Expression"
										},
										"type": "String"
									},
									"end_date": {
										"value": {
											"value": "@formatDateTime('9999-12-31','yyyy-MM-dd HH:mm:ss.mmm')",
											"type": "Expression"
										},
										"type": "String"
									},
									"id": {
										"value": {
											"value": "@item().id",
											"type": "Expression"
										},
										"type": "Int16"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_AzureSynapseAnalytics_PROD",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "Update_Run_Status_As_Failed",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Delete_Landing_Files",
						"dependencyConditions": [
							"Skipped"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get_Id_For_All_Source_Entries').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Sp_Upd_Run_Status_Failed",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[sp_upd_run_status]",
								"storedProcedureParameters": {
									"sourcetype": {
										"value": {
											"value": "@item().SourceType",
											"type": "Expression"
										},
										"type": "String"
									},
									"id": {
										"value": {
											"value": "@item().id",
											"type": "Expression"
										},
										"type": "Int16"
									},
									"run_status": {
										"value": {
											"value": "Failed",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_AzureSynapseAnalytics_PROD",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "Update_Run_Status_And_End_Date",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Set_End_Date",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get_Id_For_All_Source_Entries').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Sp_Upd_Run_Status_End",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[sp_upd_run_status]",
								"storedProcedureParameters": {
									"sourcetype": {
										"value": {
											"value": "@item().SourceType",
											"type": "Expression"
										},
										"type": "String"
									},
									"id": {
										"value": {
											"value": "@item().id",
											"type": "Expression"
										},
										"type": "Int16"
									},
									"run_status": {
										"value": {
											"value": "Completed",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_AzureSynapseAnalytics_PROD",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Sp_Udp_End_Date",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Sp_Upd_Run_Status_End",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[sp_upd_start_end_date]",
								"storedProcedureParameters": {
									"sourcetype": {
										"value": {
											"value": "@item().SourceType",
											"type": "Expression"
										},
										"type": "String"
									},
									"start_date": {
										"value": {
											"value": "@variables('Start_date')",
											"type": "Expression"
										},
										"type": "String"
									},
									"end_date": {
										"value": {
											"value": "@variables('End_date')",
											"type": "Expression"
										},
										"type": "String"
									},
									"id": {
										"value": {
											"value": "@item().id",
											"type": "Expression"
										},
										"type": "Int16"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_AzureSynapseAnalytics_PROD",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "Set_End_Date",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Delete_Landing_Files",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "End_Date",
					"value": {
						"value": "@formatDateTime(utcNow(),'yyyy-MM-dd HH:mm:ss.mmm')",
						"type": "Expression"
					}
				}
			}
		],
		"parameters": {
			"Config_Schema_Name": {
				"type": "string"
			},
			"Config_Table_Name": {
				"type": "string"
			},
			"Sourcetype": {
				"type": "string"
			},
			"Master_Pipeline_Name": {
				"type": "string"
			},
			"Master_Pipeline_Id": {
				"type": "string"
			}
		},
		"variables": {
			"Start_Date": {
				"type": "String"
			},
			"End_Date": {
				"type": "String"
			},
			"Current_Status": {
				"type": "String"
			},
			"Master_Pipeline_Name": {
				"type": "String"
			},
			"Master_Pipeline_Id": {
				"type": "String"
			}
		},
		"folder": {
			"name": "PBNA"
		},
		"annotations": [],
		"lastPublishTime": "2025-04-07T16:03:17Z"
	}
}