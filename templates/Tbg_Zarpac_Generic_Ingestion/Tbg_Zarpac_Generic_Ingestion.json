{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name"
		},
		"LS_AzureSynapseAnalytics_PROD": {
			"type": "string"
		},
		"AzureBlobStorage1": {
			"type": "string"
		},
		"Ls_Zarpac_SqlDb": {
			"type": "string"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Tbg_Zarpac_Generic_Ingestion')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set_Master_Pipeine_Name",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Update_Run_Status_And_Start_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Master_Pipeine_Name",
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set_Master_Pipeline_Id",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Update_Run_Status_And_Start_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Master_Pipeline_Id",
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set_Start_Date",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Check_If_Full_Or_Adhoc_Run",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Start_Date",
							"value": {
								"value": "@formatDateTime(utcNow(),'yyyy-MM-dd HH:mm:ss.mmm')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get_Id_For_All_Source_Entries",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set_Start_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": {
									"value": "@concat('select distinct id, sourceType, SchemaName, TableName, StageTable, StoredProcName, LastUpdDtm, SourceSchemaName, SourceTable,Columnmapping from ',pipeline().parameters.Config_Schema_Name,'.',pipeline().parameters.Config_Table_Name,' ',variables('Zarpac_Sourcetype_Query') )",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalytics_Table1",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": {
										"value": "@pipeline().parameters.Config_Schema_Name",
										"type": "Expression"
									},
									"TableName": {
										"value": "@pipeline().parameters.Config_Table_Name",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Set_End_Date",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "For_Each_Entry",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "End_Date",
							"value": {
								"value": "@formatDateTime(utcNow(),'yyyy-MM-dd HH:mm:ss.mmm')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Update_Run_Status_And_Start_Date",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get_Id_For_All_Source_Entries",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get_Id_For_All_Source_Entries').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Sp_Upd_Run_Status_As_Running",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[sp_upd_run_status]",
										"storedProcedureParameters": {
											"sourcetype": {
												"value": {
													"value": "@item().SourceType",
													"type": "Expression"
												},
												"type": "String"
											},
											"id": {
												"value": {
													"value": "@item().id",
													"type": "Expression"
												},
												"type": "Int16"
											},
											"run_status": {
												"value": {
													"value": "Running",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('LS_AzureSynapseAnalytics_PROD')]",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Sp_Udp_Start_Date",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Sp_Upd_Run_Status_As_Running",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[sp_upd_start_end_date]",
										"storedProcedureParameters": {
											"sourcetype": {
												"value": {
													"value": "@item().SourceType",
													"type": "Expression"
												},
												"type": "String"
											},
											"start_date": {
												"value": {
													"value": "@variables('Start_date')",
													"type": "Expression"
												},
												"type": "String"
											},
											"end_date": {
												"value": {
													"value": "@formatDateTime('9999-12-31','yyyy-MM-dd HH:mm:ss.mmm')",
													"type": "Expression"
												},
												"type": "String"
											},
											"id": {
												"value": {
													"value": "@item().id",
													"type": "Expression"
												},
												"type": "Int16"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('LS_AzureSynapseAnalytics_PROD')]",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Update_Run_Status_And_End_Date",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set_End_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get_Id_For_All_Source_Entries').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Sp_Upd_Run_Status_As_Completed",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[sp_upd_run_status]",
										"storedProcedureParameters": {
											"sourcetype": {
												"value": {
													"value": "@item().SourceType",
													"type": "Expression"
												},
												"type": "String"
											},
											"id": {
												"value": {
													"value": "@item().id",
													"type": "Expression"
												},
												"type": "Int16"
											},
											"run_status": {
												"value": {
													"value": "Completed",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('LS_AzureSynapseAnalytics_PROD')]",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Sp_Udp_End_Date",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Sp_Upd_Run_Status_As_Completed",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[sp_upd_start_end_date]",
										"storedProcedureParameters": {
											"sourcetype": {
												"value": {
													"value": "@item().SourceType",
													"type": "Expression"
												},
												"type": "String"
											},
											"start_date": {
												"value": {
													"value": "@variables('Start_date')",
													"type": "Expression"
												},
												"type": "String"
											},
											"end_date": {
												"value": {
													"value": "@variables('End_Date')",
													"type": "Expression"
												},
												"type": "String"
											},
											"id": {
												"value": {
													"value": "@item().id",
													"type": "Expression"
												},
												"type": "Int16"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('LS_AzureSynapseAnalytics_PROD')]",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Update_Run_Status_As_Failed",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set_End_Date",
								"dependencyConditions": [
									"Skipped"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get_Id_For_All_Source_Entries').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Sp_Upd_Run_Status_Failed",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[sp_upd_run_status]",
										"storedProcedureParameters": {
											"sourcetype": {
												"value": {
													"value": "@item().SourceType",
													"type": "Expression"
												},
												"type": "String"
											},
											"id": {
												"value": {
													"value": "@item().id",
													"type": "Expression"
												},
												"type": "Int16"
											},
											"run_status": {
												"value": {
													"value": "Failed",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('LS_AzureSynapseAnalytics_PROD')]",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "For_Each_Entry",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set_Master_Pipeine_Name",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set_Master_Pipeline_Id",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get_Id_For_All_Source_Entries').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Tbg_Zarpac_Ingestion_Stage_Publish",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Tbg_Zarpac_Ingestion_SqlDb_Stage",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Tbg_Zarpac_Ingestion_Stage_Publish",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Sourcetype": {
												"value": "@item().SourceType",
												"type": "Expression"
											},
											"Master_Pipeline_Id": {
												"value": "@variables('Master_Pipeline_Id')",
												"type": "Expression"
											},
											"Master_Pipeline_Name": {
												"value": "@variables('Master_Pipeine_Name')",
												"type": "Expression"
											},
											"SchemaName": {
												"value": "@item().SchemaName",
												"type": "Expression"
											},
											"StageTable": {
												"value": "@item().StageTable",
												"type": "Expression"
											},
											"TableName": {
												"value": "@item().TableName",
												"type": "Expression"
											},
											"StoredProcName": {
												"value": "@item().StoredProcName",
												"type": "Expression"
											},
											"Config_Schema_Name": {
												"value": "@pipeline().parameters.Config_Schema_Name",
												"type": "Expression"
											},
											"Config_Table_Name": {
												"value": "@pipeline().parameters.Config_Table_Name",
												"type": "Expression"
											},
											"Id": {
												"value": "@item().Id",
												"type": "Expression"
											},
											"SourceSchemaName": {
												"value": "@item().SourceSchemaName",
												"type": "Expression"
											},
											"SourceTable": {
												"value": "@item().SourceTable",
												"type": "Expression"
											},
											"Col_Val": {
												"value": "@item().Columnmapping",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Tbg_Zarpac_Ingestion_SqlDb_Stage",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Tbg_Zarpac_Ingestion_SqlDb_Stage",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Master_Pipeline_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"Master_Pipeline_id": {
												"value": "@pipeline().RunId",
												"type": "Expression"
											},
											"SourceSchemaName": {
												"value": "@item().SourceSchemaName",
												"type": "Expression"
											},
											"SourceTable": {
												"value": "@item().SourceTable",
												"type": "Expression"
											},
											"StageTable": {
												"value": "@item().StageTable",
												"type": "Expression"
											},
											"SchemaName": {
												"value": "@item().SchemaName",
												"type": "Expression"
											},
											"Sourcetype": {
												"value": "@item().SourceType",
												"type": "Expression"
											},
											"Id": {
												"value": "@item().Id",
												"type": "Expression"
											},
											"Config_Schema_Name": {
												"value": "@pipeline().parameters.Config_Schema_Name",
												"type": "Expression"
											},
											"Config_Table_Name": {
												"value": "@pipeline().parameters.Config_Table_Name",
												"type": "Expression"
											},
											"Col_Val": {
												"value": "@item().Columnmapping",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Success_Email",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Update_Run_Status_And_End_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"url": "https://eus1logicapp-entdata-dev.azurewebsites.net:443/api/generic_pl_success_email/triggers/manual/invoke?api-version=2022-05-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=8JDN-ED9ifSaHJ2b_zQq1VP2Q_Rrm2HYD6qgWb7JcLU",
							"body": {
								"value": "{\n    \"Environment\":\"@{pipeline().globalParameters.Environment}\",\n    \"SourceType\":\"@{variables('SourceType')}\"\n}\n\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get_Adhoc_Flag_Details_Counts",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": {
									"value": "@concat('select count(*) as record_count from  ', pipeline().parameters.Config_Schema_Name,'.',pipeline().parameters.Config_Table_Name, '  where sourcetype = ''ZARPAC_CENTRAL'' and LoadType = ''Incremental'' and adhoc_flag = ''Y'';')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalytics_Table1",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": {
										"value": "@pipeline().parameters.Config_Schema_Name",
										"type": "Expression"
									},
									"TableName": {
										"value": "@pipeline().parameters.Config_Table_Name",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Check_If_Full_Or_Adhoc_Run",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get_Adhoc_Flag_Details_Counts",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(activity('Get_Adhoc_Flag_Details_Counts').output.value[0].record_count),0)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Set_Full_Run_Query",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "Zarpac_Sourcetype_Query",
										"value": {
											"value": "WHERE sourcetype like 'ZARPAC_CENTRAL' and LoadType = 'Incremental' AND Master_run_flag = 'Y';",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Set_Adhoc_Run_Query",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "Zarpac_Sourcetype_Query",
										"value": {
											"value": "WHERE sourcetype = 'ZARPAC_CENTRAL' and LoadType = 'Incremental' AND adhoc_flag = 'Y';",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"Config_Schema_Name": {
						"type": "string",
						"defaultValue": "Tbg_Config"
					},
					"Config_Table_Name": {
						"type": "string",
						"defaultValue": "Tbg_Source_Ingestion_Config"
					}
				},
				"variables": {
					"Start_Date": {
						"type": "String"
					},
					"Master_Pipeine_Name": {
						"type": "String"
					},
					"Master_Pipeline_Id": {
						"type": "String"
					},
					"End_Date": {
						"type": "String"
					},
					"Target_Row_Count": {
						"type": "String"
					},
					"Source_Row_Count": {
						"type": "String"
					},
					"Error_Message": {
						"type": "String"
					},
					"Error_Code": {
						"type": "String"
					},
					"File_Name": {
						"type": "String"
					},
					"SchemaName": {
						"type": "String"
					},
					"TableName": {
						"type": "String"
					},
					"StageTable": {
						"type": "String"
					},
					"Config_Last_Upd_Dtm": {
						"type": "String"
					},
					"SourceType": {
						"type": "String",
						"defaultValue": "ZARPAC_CENTRAL"
					},
					"count": {
						"type": "String"
					},
					"Zarpac_Sourcetype_Query": {
						"type": "String"
					},
					"Config_Last_Updt_Dtm": {
						"type": "String"
					},
					"Col_Val": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Zarpac"
				},
				"annotations": [],
				"lastPublishTime": "2025-04-07T16:03:09Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSynapseAnalytics_Table1')]",
				"[concat(variables('factoryId'), '/pipelines/Tbg_Zarpac_Ingestion_Stage_Publish')]",
				"[concat(variables('factoryId'), '/pipelines/Tbg_Zarpac_Ingestion_SqlDb_Stage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalytics_Table1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('LS_AzureSynapseAnalytics_PROD')]",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SchemaName": {
						"type": "string",
						"defaultValue": "tbg_tdlink"
					},
					"TableName": {
						"type": "string",
						"defaultValue": "tbg_tdlink_store"
					}
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "STDLINXSCD",
						"type": "varchar"
					},
					{
						"name": "STRANSCD",
						"type": "varchar"
					},
					{
						"name": "SMODCHGIND",
						"type": "varchar"
					},
					{
						"name": "SFILEDT",
						"type": "varchar"
					},
					{
						"name": "SSTATUSIND",
						"type": "varchar"
					},
					{
						"name": "SNAME",
						"type": "varchar"
					},
					{
						"name": "SNO",
						"type": "varchar"
					},
					{
						"name": "SSTREETADD",
						"type": "varchar"
					},
					{
						"name": "SCITY",
						"type": "varchar"
					},
					{
						"name": "SST",
						"type": "varchar"
					},
					{
						"name": "SZIP",
						"type": "varchar"
					},
					{
						"name": "SPLACENM",
						"type": "varchar"
					},
					{
						"name": "SSTCD",
						"type": "varchar"
					},
					{
						"name": "SCNTCD",
						"type": "varchar"
					},
					{
						"name": "SCNTRYNM",
						"type": "varchar"
					},
					{
						"name": "STRADECLCD",
						"type": "varchar"
					},
					{
						"name": "SFORMATCD",
						"type": "varchar"
					},
					{
						"name": "SNOSTRCD",
						"type": "varchar"
					},
					{
						"name": "SCHAININD",
						"type": "varchar"
					},
					{
						"name": "SFILLER1",
						"type": "varchar"
					},
					{
						"name": "SLAT",
						"type": "varchar"
					},
					{
						"name": "SLONG",
						"type": "varchar"
					},
					{
						"name": "SLATLONGCD",
						"type": "varchar"
					},
					{
						"name": "SBLOCKID",
						"type": "varchar"
					},
					{
						"name": "SFILLER2",
						"type": "varchar"
					},
					{
						"name": "SAREACD",
						"type": "varchar"
					},
					{
						"name": "SPHONENO",
						"type": "varchar"
					},
					{
						"name": "SFILLER3",
						"type": "varchar"
					},
					{
						"name": "SANNVOLCD",
						"type": "varchar"
					},
					{
						"name": "SWKLYVOL",
						"type": "varchar"
					},
					{
						"name": "SSQFT",
						"type": "varchar"
					},
					{
						"name": "SFTEMPLOY",
						"type": "varchar"
					},
					{
						"name": "SNMCHKOUT",
						"type": "varchar"
					},
					{
						"name": "SFILLER4",
						"type": "varchar"
					},
					{
						"name": "STDLINXOCD",
						"type": "varchar"
					},
					{
						"name": "SOWNFAMCD",
						"type": "varchar"
					},
					{
						"name": "SOWNNM",
						"type": "varchar"
					},
					{
						"name": "SOWNCITY",
						"type": "varchar"
					},
					{
						"name": "SOWNST",
						"type": "varchar"
					},
					{
						"name": "SOWNSTCD",
						"type": "varchar"
					},
					{
						"name": "SOWNCNTCD",
						"type": "varchar"
					},
					{
						"name": "SFILLER5",
						"type": "varchar"
					},
					{
						"name": "STDLINXPCD",
						"type": "varchar"
					},
					{
						"name": "SSUPFAMCD",
						"type": "varchar"
					},
					{
						"name": "SSUPNM",
						"type": "varchar"
					},
					{
						"name": "SSUPCITY",
						"type": "varchar"
					},
					{
						"name": "SSUPST",
						"type": "varchar"
					},
					{
						"name": "SSUPSTCD",
						"type": "varchar"
					},
					{
						"name": "SSUPCNTCD",
						"type": "varchar"
					},
					{
						"name": "SFILLER6",
						"type": "varchar"
					},
					{
						"name": "STDLINXGCD",
						"type": "varchar"
					},
					{
						"name": "SGRPNM",
						"type": "varchar"
					},
					{
						"name": "SFRANIND",
						"type": "varchar"
					},
					{
						"name": "SFILLER7",
						"type": "varchar"
					},
					{
						"name": "SGAS",
						"type": "varchar"
					},
					{
						"name": "SHIVOLCIG",
						"type": "varchar"
					},
					{
						"name": "SPHARM",
						"type": "varchar"
					},
					{
						"name": "SLIQUOR",
						"type": "varchar"
					},
					{
						"name": "SWINE",
						"type": "varchar"
					},
					{
						"name": "SBEER",
						"type": "varchar"
					},
					{
						"name": "SONPREM",
						"type": "varchar"
					},
					{
						"name": "SFOODTYPE",
						"type": "varchar"
					},
					{
						"name": "SCLINICS",
						"type": "varchar"
					},
					{
						"name": "SSNAPWIC",
						"type": "varchar"
					},
					{
						"name": "SFUTURE1",
						"type": "varchar"
					},
					{
						"name": "SFILLER8",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SchemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Tbg_Zarpac_Ingestion_Stage_Publish')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Sp_Incremental_Load_From_Stage_To_Publish",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Set_Source_Row_Count",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "@pipeline().parameters.StoredProcName",
								"type": "Expression"
							},
							"storedProcedureParameters": {
								"source": {
									"value": "ZARPAC",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('LS_AzureSynapseAnalytics_PROD')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Sp_Create_Publishedlayer_Success_Ingestion_Auditlog",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Set_Target_Row_Count",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_create_ingestion_auditlog]",
							"storedProcedureParameters": {
								"IngestionEndTime": {
									"value": {
										"value": "@utcNow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"IngestionStartTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"PipelineRunId": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"SourceName": {
									"value": {
										"value": "@pipeline().parameters.StageTable",
										"type": "Expression"
									},
									"type": "String"
								},
								"SourceRowCount": {
									"value": {
										"value": "@int(variables('Source_Row_Count'))",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"SourceType": {
									"value": {
										"value": "Stage Layer",
										"type": "Expression"
									},
									"type": "String"
								},
								"Status": {
									"value": {
										"value": "Completed",
										"type": "Expression"
									},
									"type": "String"
								},
								"TargetName": {
									"value": {
										"value": "@pipeline().parameters.TableName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TargetRowCount": {
									"value": {
										"value": "@int(variables('Target_Row_Count'))",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"TargetType": {
									"value": {
										"value": "Published Layer",
										"type": "Expression"
									},
									"type": "String"
								},
								"MasterPipelineId": {
									"value": {
										"value": "@pipeline().parameters.Master_Pipeline_Id",
										"type": "Expression"
									},
									"type": "String"
								},
								"MasterPipelineName": {
									"value": {
										"value": "@pipeline().parameters.Master_Pipeline_Name",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"StatusMessage": {
									"value": null,
									"type": "String"
								},
								"ErrorCode": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('LS_AzureSynapseAnalytics_PROD')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Get_Record_Count_Of_Target",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Sp_Incremental_Load_From_Stage_To_Publish",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": {
									"value": "@concat('Select Count(*) as count from ',pipeline().parameters.SchemaName,'.',pipeline().parameters.TableName,' where ',pipeline().parameters.Col_Val,' > ','''',variables('Config_Last_Updt_Dtm'),'''')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalytics_Table1",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": {
										"value": "@pipeline().parameters.SchemaName",
										"type": "Expression"
									},
									"TableName": {
										"value": "@pipeline().parameters.TableName",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Set_Target_Row_Count",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get_Record_Count_Of_Target",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Target_Row_Count",
							"value": {
								"value": "@string(activity('Get_Record_Count_Of_Target').output.firstRow.count)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get_Record_Count_Of_Stage_Source",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Row_Last_Updt_Dtm",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": {
									"value": "@concat('SELECT count(*) as count FROM ',pipeline().parameters.SchemaName,'.',pipeline().parameters.StageTable)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalytics_Table1",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": {
										"value": "@pipeline().parameters.SchemaName",
										"type": "Expression"
									},
									"TableName": {
										"value": "@pipeline().parameters.StageTable",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Set_Source_Row_Count",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get_Record_Count_Of_Stage_Source",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Source_Row_Count",
							"value": {
								"value": "@string(activity('Get_Record_Count_Of_Stage_Source').output.firstRow.count)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Sp_Create_Publishedlayer_Failed_Ingestion_Auditlog",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Sp_Incremental_Load_From_Stage_To_Publish",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_create_ingestion_auditlog]",
							"storedProcedureParameters": {
								"IngestionEndTime": {
									"value": {
										"value": "@utcNow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"IngestionStartTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"PipelineRunId": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"SourceName": {
									"value": {
										"value": "@pipeline().parameters.StageTable",
										"type": "Expression"
									},
									"type": "String"
								},
								"SourceRowCount": {
									"value": {
										"value": "0",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"SourceType": {
									"value": {
										"value": "Stage Layer",
										"type": "Expression"
									},
									"type": "String"
								},
								"Status": {
									"value": {
										"value": "Failed",
										"type": "Expression"
									},
									"type": "String"
								},
								"TargetName": {
									"value": {
										"value": "@pipeline().parameters.TableName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TargetRowCount": {
									"value": {
										"value": "0",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"TargetType": {
									"value": {
										"value": "Published Layer",
										"type": "Expression"
									},
									"type": "String"
								},
								"MasterPipelineId": {
									"value": {
										"value": "@pipeline().parameters.Master_Pipeline_Id",
										"type": "Expression"
									},
									"type": "String"
								},
								"MasterPipelineName": {
									"value": {
										"value": "@pipeline().parameters.Master_Pipeline_Name",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"Error_Message": {
									"value": {
										"value": "@variables('Error_Message')",
										"type": "Expression"
									},
									"type": "String"
								},
								"Error_Code": {
									"value": {
										"value": "@variables('Error_Code')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('LS_AzureSynapseAnalytics_PROD')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fail_Stg_To_Publish",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "Failure_Mail",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": "Data loading failed from Staging to Published",
							"errorCode": "101"
						}
					},
					{
						"name": "Failure_Mail",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Sp_Create_Publishedlayer_Failed_Ingestion_Auditlog",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"url": {
								"value": "@pipeline().globalParameters.LogicApp_generic_pl_failure_email",
								"type": "Expression"
							},
							"body": {
								"value": "{\n    \"Environment\":\"@{pipeline().globalParameters.Environment}\",\n\t\"DataFactoryName\":\"@{pipeline().Pipeline}\",\n\t\"ErrorMessage\":\"Data loading failed from Staging to Published\",\n\t\"RunId\":\"@{pipeline().RunId}\",\n\t\"pipelineName\":\"@{pipeline().Pipeline}\",\n\t\"SourceType\":\"@{pipeline().parameters.Sourcetype}\",\n    \"FileName\":\"@{pipeline().parameters.TableName}\"\n}\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Lookup_Config_Last_Upd_Dtm",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": {
									"value": "@concat('select LastUpdDtm from ',pipeline().parameters.Config_Schema_Name,'.',pipeline().parameters.Config_Table_Name,' where Id = ',pipeline().parameters.Id)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalytics_Table1",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": {
										"value": "@pipeline().parameters.Config_Schema_Name",
										"type": "Expression"
									},
									"TableName": {
										"value": "@pipeline().parameters.Config_Table_Name",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "Set_Config_Last_Upd_Dtm",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup_Config_Last_Upd_Dtm",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Config_Last_Updt_Dtm",
							"value": {
								"value": "@activity('Lookup_Config_Last_Upd_Dtm').output.firstRow.LastUpdDtm",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Sp_Upd_Lst_Upd_Dtm",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Sp_Create_Publishedlayer_Success_Ingestion_Auditlog",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_upd_Last_Upd_Dtm]",
							"storedProcedureParameters": {
								"id": {
									"value": {
										"value": "@pipeline().parameters.Id",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"NewLastUpdDtm": {
									"value": {
										"value": "@activity('Lookup_Row_Last_Updt_Dtm').output.firstRow.max",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"sourcetype": {
									"value": {
										"value": "@pipeline().parameters.Sourcetype",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('LS_AzureSynapseAnalytics_PROD')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup_Row_Last_Updt_Dtm",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set_Config_Last_Upd_Dtm",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "@concat('select max(',pipeline().parameters.Col_Val,') as max from ',pipeline().parameters.SourceSchemaName,'.',pipeline().parameters.SourceTable)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Ds_Sqldb_Synapse1",
								"type": "DatasetReference"
							}
						}
					}
				],
				"parameters": {
					"Sourcetype": {
						"type": "string",
						"defaultValue": "ZARPAC_CENTRAL"
					},
					"Master_Pipeline_Id": {
						"type": "string",
						"defaultValue": "123"
					},
					"Master_Pipeline_Name": {
						"type": "string",
						"defaultValue": "abc"
					},
					"SchemaName": {
						"type": "string",
						"defaultValue": "Tbg_Zarpac"
					},
					"StageTable": {
						"type": "string",
						"defaultValue": "Tbg_Stg_Zarpac_B_Prdctn_Mach"
					},
					"TableName": {
						"type": "string",
						"defaultValue": "Tbg_Zarpac_B_Prdctn_Mach"
					},
					"StoredProcName": {
						"type": "string",
						"defaultValue": "dbo.sp_Load_Tbg_Zarpac_B_Prdctn_Mach"
					},
					"Config_Schema_Name": {
						"type": "string"
					},
					"Config_Table_Name": {
						"type": "string"
					},
					"Id": {
						"type": "string"
					},
					"SourceSchemaName": {
						"type": "string"
					},
					"SourceTable": {
						"type": "string"
					},
					"Col_Val": {
						"type": "string"
					}
				},
				"variables": {
					"Source_Row_Count": {
						"type": "String"
					},
					"File_Name": {
						"type": "String"
					},
					"Target_Row_Count": {
						"type": "String"
					},
					"Error_Code": {
						"type": "String"
					},
					"Error_Message": {
						"type": "String"
					},
					"count": {
						"type": "String"
					},
					"Zarpac_Sourcetype_Query": {
						"type": "String"
					},
					"Config_Last_Updt_Dtm": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Zarpac"
				},
				"annotations": [],
				"lastPublishTime": "2025-04-07T16:03:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSynapseAnalytics_Table1')]",
				"[concat(variables('factoryId'), '/datasets/Ds_Sqldb_Synapse1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Tbg_Zarpac_Ingestion_SqlDb_Stage')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_SqlDb_Stg",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Sp_Truncate_Stage_Table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "@concat('select * from ',pipeline().parameters.SourceSchemaName,'.',pipeline().parameters.SourceTable,' where ',pipeline().parameters.Col_Val,' > ','''',variables('Config_Last_Upd_Dtm'),'''')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlDWSink",
								"allowCopyCommand": true
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "[parameters('AzureBlobStorage1')]",
									"type": "LinkedServiceReference"
								},
								"path": {
									"value": "@concat(pipeline().globalParameters.SourceContainer, '/Tropicana/Log')",
									"type": "Expression"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Ds_Sqldb_Synapse1",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSynapseAnalytics_Table1",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": {
										"value": "@pipeline().parameters.SchemaName",
										"type": "Expression"
									},
									"TableName": {
										"value": "@pipeline().parameters.StageTable",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Sp_Truncate_Stage_Table",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Lookup_Row_Last_Updt_Dtm",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_truncate_table]",
							"storedProcedureParameters": {
								"schema_name": {
									"value": {
										"value": "@pipeline().parameters.SchemaName",
										"type": "Expression"
									},
									"type": "String"
								},
								"table_name": {
									"value": {
										"value": "@pipeline().parameters.StageTable",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('LS_AzureSynapseAnalytics_PROD')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set_Target_Row_Count",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Copy_SqlDb_Stg",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Target_Row_Count",
							"value": {
								"value": "@string(activity('Copy_SqlDb_Stg').output.rowsCopied)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set_Source_Row_Count",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Copy_SqlDb_Stg",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Source_Row_Count",
							"value": {
								"value": "@string(activity('Copy_SqlDb_Stg').output.rowsRead)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set_Error_Message",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Copy_SqlDb_Stg",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Error_Message",
							"value": {
								"value": "@activity('Copy_SqlDb_Stg').output.errors[0].Message",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set_Error_Code",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Copy_SqlDb_Stg",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Error_Code",
							"value": {
								"value": "@string(activity('Copy_SqlDb_Stg').StatusCode)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set_File_Name",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Copy_SqlDb_Stg",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "File_Name",
							"value": "ZARPAC"
						}
					},
					{
						"name": "Sp_Create_Stagelayer_Failed_Ingestion_Auditlog",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Set_Error_Message",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set_Error_Code",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set_File_Name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_create_ingestion_auditlog]",
							"storedProcedureParameters": {
								"IngestionEndTime": {
									"value": {
										"value": "@utcNow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"IngestionStartTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"PipelineRunId": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"SourceName": {
									"value": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									},
									"type": "String"
								},
								"SourceRowCount": {
									"value": {
										"value": "0",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"SourceType": {
									"value": {
										"value": "@pipeline().parameters.Sourcetype",
										"type": "Expression"
									},
									"type": "String"
								},
								"Status": {
									"value": {
										"value": "Failed",
										"type": "Expression"
									},
									"type": "String"
								},
								"TargetName": {
									"value": {
										"value": "@pipeline().parameters.StageTable",
										"type": "Expression"
									},
									"type": "String"
								},
								"TargetRowCount": {
									"value": {
										"value": "0",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"TargetType": {
									"value": {
										"value": "Stage Layer",
										"type": "Expression"
									},
									"type": "String"
								},
								"MasterPipelineId": {
									"value": {
										"value": "@pipeline().parameters.Master_Pipeline_Id",
										"type": "Expression"
									},
									"type": "String"
								},
								"MasterPipelineName": {
									"value": {
										"value": "@pipeline().parameters.Master_Pipeline_Name",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"StatusMessage": {
									"value": {
										"value": "@variables('Error_Message')",
										"type": "Expression"
									},
									"type": "String"
								},
								"ErrorCode": {
									"value": {
										"value": "@variables('Error_Code')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('LS_AzureSynapseAnalytics_PROD')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Sp_Create_Stagelayer_Success_Ingestion_Auditlog",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Set_Target_Row_Count",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set_Source_Row_Count",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_create_ingestion_auditlog]",
							"storedProcedureParameters": {
								"IngestionEndTime": {
									"value": {
										"value": "@utcNow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"IngestionStartTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"PipelineRunId": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"SourceName": {
									"value": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									},
									"type": "String"
								},
								"SourceRowCount": {
									"value": {
										"value": "@int(variables('Source_Row_Count'))",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"SourceType": {
									"value": {
										"value": "@pipeline().parameters.Sourcetype",
										"type": "Expression"
									},
									"type": "String"
								},
								"Status": {
									"value": {
										"value": "Completed",
										"type": "Expression"
									},
									"type": "String"
								},
								"TargetName": {
									"value": {
										"value": "@pipeline().parameters.StageTable",
										"type": "Expression"
									},
									"type": "String"
								},
								"TargetRowCount": {
									"value": {
										"value": "@int(variables('Target_Row_Count'))",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"TargetType": {
									"value": {
										"value": "Stage Layer",
										"type": "Expression"
									},
									"type": "String"
								},
								"MasterPipelineId": {
									"value": {
										"value": "@pipeline().parameters.Master_Pipeline_Id",
										"type": "Expression"
									},
									"type": "String"
								},
								"MasterPipelineName": {
									"value": {
										"value": "@pipeline().parameters.Master_Pipeline_Name",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"StatusMessage": {
									"value": null,
									"type": "String"
								},
								"ErrorCode": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('LS_AzureSynapseAnalytics_PROD')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup_Row_Last_Updt_Dtm",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set_Config_Last_Upd_Dtm",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "@concat('select max(',pipeline().parameters.Col_Val,') as max from ',pipeline().parameters.SourceSchemaName,'.',pipeline().parameters.SourceTable)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Ds_Sqldb_Synapse1",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "Fail_Zarpac_Server_To_Stg",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "Failure_Mail",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": "Data loading failed from Zarpac Server to Staging",
							"errorCode": "101"
						}
					},
					{
						"name": "Failure_Mail",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Sp_Create_Stagelayer_Failed_Ingestion_Auditlog",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"url": {
								"value": "@pipeline().globalParameters.LogicApp_generic_pl_failure_email",
								"type": "Expression"
							},
							"body": {
								"value": "{\n    \"Environment\":\"@{pipeline().globalParameters.Environment}\",\n\t\"DataFactoryName\":\"@{pipeline().Pipeline}\",\n\t\"ErrorMessage\":\"@{variables('Error_Message')}\",\n\t\"RunId\":\"@{pipeline().RunId}\",\n\t\"pipelineName\":\"@{pipeline().Pipeline}\",\n\t\"SourceType\":\"@{pipeline().parameters.Sourcetype}\",\n    \"FileName\":\"@{pipeline().parameters.StageTable}\"\n}\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Lookup_Config_Last_Upd_Dtm",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": {
									"value": "@concat('select LastUpdDtm from ',pipeline().parameters.Config_Schema_Name,'.',pipeline().parameters.Config_Table_Name,' where Id = ',pipeline().parameters.Id)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalytics_Table1",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": {
										"value": "@pipeline().parameters.Config_Schema_Name",
										"type": "Expression"
									},
									"TableName": {
										"value": "@pipeline().parameters.Config_Table_Name",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "Set_Config_Last_Upd_Dtm",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup_Config_Last_Upd_Dtm",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Config_Last_Upd_Dtm",
							"value": {
								"value": "@activity('Lookup_Config_Last_Upd_Dtm').output.firstRow.LastUpdDtm",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"Master_Pipeline_name": {
						"type": "string",
						"defaultValue": "abc"
					},
					"Master_Pipeline_id": {
						"type": "string",
						"defaultValue": "123"
					},
					"SourceSchemaName": {
						"type": "string",
						"defaultValue": "Zarpac_Central"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "Tbg_Zarpac_Filler_Rates_Table"
					},
					"StageTable": {
						"type": "string",
						"defaultValue": "Tbg_Stg_Zarpac_Filler_Rates_Table"
					},
					"SchemaName": {
						"type": "string",
						"defaultValue": "Tbg_Zarpac"
					},
					"Sourcetype": {
						"type": "string",
						"defaultValue": "ZARPAC_CENTRAL"
					},
					"Id": {
						"type": "string",
						"defaultValue": "4004"
					},
					"Config_Schema_Name": {
						"type": "string",
						"defaultValue": "Tbg_Config"
					},
					"Config_Table_Name": {
						"type": "string",
						"defaultValue": "Tbg_Source_Ingestion_Config"
					},
					"Col_Val": {
						"type": "string",
						"defaultValue": "FILLR_RT_MEASMT_STRT_DT"
					}
				},
				"variables": {
					"Start_Date": {
						"type": "String"
					},
					"Master_Pipeine_Name": {
						"type": "String"
					},
					"Master_Pipeline_Id": {
						"type": "String"
					},
					"End_Date": {
						"type": "String"
					},
					"Target_Row_Count": {
						"type": "String"
					},
					"Source_Row_Count": {
						"type": "String"
					},
					"Error_Message": {
						"type": "String"
					},
					"Error_Code": {
						"type": "String"
					},
					"File_Name": {
						"type": "String"
					},
					"Config_Last_Upd_Dtm": {
						"type": "String"
					},
					"count": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Zarpac"
				},
				"annotations": [],
				"lastPublishTime": "2025-04-07T16:03:06Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Ds_Sqldb_Synapse1')]",
				"[concat(variables('factoryId'), '/datasets/AzureSynapseAnalytics_Table1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ds_Sqldb_Synapse1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('Ls_Zarpac_SqlDb')]",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": []
			},
			"dependsOn": []
		}
	]
}